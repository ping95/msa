version: "3"
services:
  mynginx:
    container_name: mynginx
    image: nginx:latest
    ports:
      #- "80:80"
      - "443:443"
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./log/nginx:/var/log/nginx
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/cert:/etc/pki/nginx
    networks:
      - backend
#    network_mode: bridge      
    privileged: true

  mynode:
    container_name: mynode
    build:
      context: ./node
      dockerfile: Dockerfile
    ports:
     - "8080:8080"
    volumes:
     - ./node/src:/usr/src/app/src 
    networks:
      - backend
#    network_mode: bridge      
    privileged: true

  myrms:
    container_name: myrms
    mac_address: 00:0c:29:93:ae:73     
    # SKRLECWIT221940
    # b77de298324755c3
    build:
      context: ./rms
      dockerfile: Dockerfile
    volumes:
      - '/home1/hyjung/msa/rms/apache/conf:/home1/apache/conf'
    ports:
     - "8081:8081"
    networks:
      - backend
#    network_mode: bridge      
    command: ["/home1/apache/bin/httpd", "-D", "FOREGROUND"]

  medallion:
    container_name: medallion
    build:
      context: ./taxii
      dockerfile: ./docker_utils/Dockerfile
    ports:
      - 5000:5000
    volumes:
      - '/home1/hyjung/msa/taxii/config:/config'
    privileged: true
    networks:
      - backend
#    network_mode: bridge      
    command: [sh, -c, "medallion --host 0.0.0.0 /config/docker_config.json"]

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - './mongodb/data:/data/db'
    privileged: true
    networks:
      - backend
#    network_mode: bridge
networks:
  backend:
    driver: bridge
